(program (sourceElements (sourceElement (statement (interfaceDeclaration interface IProcessor (objectType { (typeBody (typeMemberList (typeMember (propertySignatur (propertyName (identifierName result)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName T)))))))) ; (typeMember (methodSignature (propertyName (identifierName process)) (callSignature ( (parameterList (parameter (requiredParameter (identifierOrPattern (identifierName a)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName T)))))))) , (parameter (requiredParameter (identifierOrPattern (identifierName b)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName T))))))))) ))) => (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName T))))))) ;) })))) (sourceElement (statement (interfaceDeclaration interface KeyPair (typeParameters < (typeParameterList (typeParameter T) , (typeParameter U)) >) (objectType { (typeBody (typeMemberList (typeMember (propertySignatur (propertyName (identifierName key)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName T)))))))) ; (typeMember (propertySignatur (propertyName (identifierName value)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName U))))))))) ;) })))) (sourceElement (statement (variableStatement (varModifier let) (variableDeclarationList (variableDeclaration (identifierOrKeyWord kv1) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName KeyPair) (nestedTypeGeneric (typeGeneric < (typeArgumentList (typeArgument (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number))))) , (typeArgument (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string)))))) >))))))) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName key)) : (singleExpression (literal (numericLiteral 1)))) , (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal "Steve"))) })))) ;))) (sourceElement (statement (variableStatement (varModifier let) (variableDeclarationList (variableDeclaration (identifierOrKeyWord kv2) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName KeyPair) (nestedTypeGeneric (typeGeneric < (typeArgumentList (typeArgument (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number))))) , (typeArgument (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number)))))) >))))))) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName key)) : (singleExpression (literal (numericLiteral 1)))) , (propertyAssignment (propertyName (identifierName value)) : (singleExpression (literal (numericLiteral 12345)))) })))) ;))) (sourceElement (statement (interfaceDeclaration interface KeyValueProcessor (typeParameters < (typeParameterList (typeParameter T) , (typeParameter U)) >) (objectType { (typeBody (typeMemberList (typeMember (callSignature ( (parameterList (parameter (requiredParameter (identifierOrPattern (identifierName key)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName T)))))))) , (parameter (requiredParameter (identifierOrPattern (identifierName val)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName U))))))))) ) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType void)))))))) ;) }) ;))) (sourceElement (statement (functionDeclaration function processNumKeyPairs (callSignature ( (parameterList (parameter (requiredParameter (identifierOrPattern (identifierName key)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number))))))) , (parameter (requiredParameter (identifierOrPattern (identifierName value)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number)))))))) ) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType void)))))) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (identifierName console)) . (identifierName log)) (arguments ( (argumentList (argument (singleExpression (singleExpression (literal 'processNumKeyPairs: key = ')) + (singleExpression (identifierName key) (singleExpression (singleExpression + (singleExpression (literal ', value = '))) + (singleExpression (identifierName value))))))) ))))))))) })))) <EOF>)
