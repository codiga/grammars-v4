(program (sourceElements (sourceElement (statement (variableStatement (varModifier var) (variableDeclarationList (variableDeclaration (identifierOrKeyWord empty) = (singleExpression (literal (templateStringLiteral ` `))))) ;))) (sourceElement (statement (variableStatement (varModifier var) (variableDeclarationList (variableDeclaration (identifierOrKeyWord simple) = (singleExpression (literal (templateStringLiteral ` (templateStringAtom f) (templateStringAtom o) (templateStringAtom o) (templateStringAtom b) (templateStringAtom a) (templateStringAtom r) `))))) ;))) (sourceElement (statement (variableStatement (varModifier var) (variableDeclarationList (variableDeclaration (identifierOrKeyWord lineBreak) = (singleExpression (literal (templateStringLiteral ` (templateStringAtom \n) `))))) ;))) (sourceElement (statement (variableStatement (varModifier var) (variableDeclarationList (variableDeclaration (identifierOrKeyWord nested) = (singleExpression (literal (templateStringLiteral ` (templateStringAtom a) (templateStringAtom a) (templateStringAtom a) (templateStringAtom ${ (singleExpression (literal (templateStringLiteral ` (templateStringAtom b) (templateStringAtom b) (templateStringAtom b) `))) }) (templateStringAtom c) (templateStringAtom c) (templateStringAtom c) `))))) ;))) (sourceElement (statement (variableStatement (varModifier let) (variableDeclarationList (variableDeclaration (identifierOrKeyWord str) = (singleExpression (literal (templateStringLiteral ` (templateStringAtom ${ (singleExpression (identifierName dsName)) }) (templateStringAtom ${ (singleExpression (singleExpression (identifierName parameterStr)) ? (singleExpression (literal (templateStringLiteral ` (templateStringAtom () (templateStringAtom  ) (templateStringAtom ${ (singleExpression (identifierName parameterStr)) }) (templateStringAtom  ) (templateStringAtom )) `))) : (singleExpression (literal ""))) }) (templateStringAtom ${ (singleExpression (singleExpression (identifierName returns)) ? (singleExpression (literal (templateStringLiteral ` (templateStringAtom {) (templateStringAtom \n) (templateStringAtom ${ (singleExpression (identifierName returns)) }) (templateStringAtom }) `))) : (singleExpression (literal ""))) }) `))))) ;)))) <EOF>)
