(program (sourceElements (sourceElement (statement (classDeclaration abstract class Person classHeritage (classTail { (classElement (propertyMemberDeclaration propertyMemberBase (propertyName (identifierName name)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string))))) ;)) (classElement (constructorDeclaration constructor ( (formalParameterList (formalParameterArg (identifierOrKeyWord name) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string))))))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName name)) = (singleExpression (identifierName name)))) ;))))) })) (classElement (propertyMemberDeclaration (abstractDeclaration abstract find (callSignature ( (parameterList (parameter (requiredParameter (identifierOrPattern (identifierName (reservedWord (keyword string))))))) ) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName Person))))))) (eos ;)))) (classElement (propertyMemberDeclaration (abstractDeclaration abstract (variableStatement (variableDeclarationList (variableDeclaration (identifierOrKeyWord nameAbs) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string))))))) ;) eos))) })))) (sourceElement (statement (classDeclaration class Employee (classHeritage (classExtendsClause extends (typeReference (typeName Person)))) (classTail { (classElement (propertyMemberDeclaration propertyMemberBase (propertyName (identifierName empCode)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number))))) ;)) (classElement (constructorDeclaration constructor ( (formalParameterList (formalParameterArg (identifierOrKeyWord name) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string)))))) , (formalParameterArg (identifierOrKeyWord code) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number))))))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (identifierName (reservedWord (keyword super))) (singleExpression ( (expressionSequence (singleExpression (identifierName name))) )))) ;))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName empCode)) = (singleExpression (identifierName code)))) ;))))) })) (classElement (propertyMemberDeclaration propertyMemberBase (propertyName (identifierName find)) (callSignature ( (parameterList (parameter (requiredParameter (identifierOrPattern (identifierName name)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string)))))))) ) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName Person))))))) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression new (singleExpression (identifierName Employee)) (arguments ( (argumentList (argument (singleExpression (identifierName name))) , (argument (singleExpression (literal (numericLiteral 1))))) )))) (eos ;)))))) })) })))) (sourceElement (statement (variableStatement (varModifier let) (variableDeclarationList (variableDeclaration (identifierOrKeyWord emp) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName Person)))))) = (singleExpression new (singleExpression (identifierName Employee)) (arguments ( (argumentList (argument (singleExpression (literal "James"))) , (argument (singleExpression (literal (numericLiteral 100))))) ))))) ;))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (identifierName emp)) . (identifierName display)) (arguments ( )))) ;))) (sourceElement (statement (variableStatement (varModifier let) (variableDeclarationList (variableDeclaration (identifierOrKeyWord emp2) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName Person)))))) = (singleExpression (singleExpression (singleExpression (identifierName emp)) . (identifierName find)) (arguments ( (argumentList (argument (singleExpression (literal 'Steve')))) ))))) ;)))) <EOF>)
