(program (sourceElements (sourceElement (statement (variableStatement (varModifier let) (variableDeclarationList (variableDeclaration (identifierOrKeyWord employeeName) = (singleExpression (literal "John")))) ;))) (sourceElement (statement (variableStatement (varModifier let) (variableDeclarationList (variableDeclaration (identifierOrKeyWord employeeName) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string))))) = (singleExpression (literal "John")))) ;))) (sourceElement (statement (variableStatement (varModifier var) (variableDeclarationList (variableDeclaration (identifierOrKeyWord num1) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number))))) = (singleExpression (literal (numericLiteral 1))))) ;))) (sourceElement (statement (variableStatement (varModifier const) (variableDeclarationList (variableDeclaration (identifierOrKeyWord playerCodes) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName player1)) : (singleExpression (literal (numericLiteral 9)))) , (propertyAssignment (propertyName (identifierName player2)) : (singleExpression (literal (numericLiteral 10)))) , (propertyAssignment (propertyName (identifierName player3)) : (singleExpression (literal (numericLiteral 13)))) , (propertyAssignment (propertyName (identifierName player4)) : (singleExpression (literal (numericLiteral 20)))) })))) ;))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (identifierName playerCodes)) . (identifierName player2)) = (singleExpression (literal (numericLiteral 11))))) ;))) (sourceElement (statement (variableStatement (variableDeclarationList (variableDeclaration (identifierOrKeyWord playerCodes) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName player1)) : (singleExpression (literal (numericLiteral 50)))) , (propertyAssignment (propertyName (identifierName player2)) : (singleExpression (literal (numericLiteral 10)))) , (propertyAssignment (propertyName (identifierName player3)) : (singleExpression (literal (numericLiteral 13)))) , (propertyAssignment (propertyName (identifierName player4)) : (singleExpression (literal (numericLiteral 20)))) })))) ;))) (sourceElement (statement (variableStatement (variableDeclarationList (variableDeclaration (identifierOrKeyWord playerCodesArray) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName player1)) : (singleExpression (literal (numericLiteral 50)))) , (propertyAssignment (propertyName (identifierName player2)) : (singleExpression (identifierName playerCodes) (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (identifierName Test)))) ])))) , (propertyAssignment (propertyName (identifierName player3)) : (singleExpression (literal (numericLiteral 13)))) , (propertyAssignment (propertyName (identifierName player4)) : (singleExpression (literal (numericLiteral 20)))) })))) ;))) (sourceElement export (statement (variableStatement (varModifier const) (variableDeclarationList (variableDeclaration (identifierOrKeyWord ROUTES) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (primaryType (predefinedType any)) [ ])))) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName path)) : (singleExpression (literal '/dashboard'))) , (propertyAssignment (propertyName (identifierName title)) : (singleExpression (literal 'Dashboard'))) , (propertyAssignment (propertyName (identifierName icon)) : (singleExpression (literal 'dashboard'))) , (propertyAssignment (propertyName (identifierName (reservedWord (keyword class)))) : (singleExpression (literal ''))) , (propertyAssignment (propertyName (identifierName allowAnonymous)) : (singleExpression (identifierName (reservedWord false)))) }))) , (arrayElement (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName path)) : (singleExpression (literal '/deals'))) , (propertyAssignment (propertyName (identifierName title)) : (singleExpression (literal 'Deals'))) , (propertyAssignment (propertyName (identifierName icon)) : (singleExpression (literal 'assignment'))) , (propertyAssignment (propertyName (identifierName (reservedWord (keyword class)))) : (singleExpression (literal ''))) , (propertyAssignment (propertyName (identifierName allowAnonymous)) : (singleExpression (identifierName (reservedWord false)))) }))) , (arrayElement (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName path)) : (singleExpression (literal '/pipeline'))) , (propertyAssignment (propertyName (identifierName title)) : (singleExpression (literal 'Pipeline'))) , (propertyAssignment (propertyName (identifierName icon)) : (singleExpression (literal 'timeline'))) , (propertyAssignment (propertyName (identifierName (reservedWord (keyword class)))) : (singleExpression (literal ''))) , (propertyAssignment (propertyName (identifierName allowAnonymous)) : (singleExpression (identifierName (reservedWord false)))) }))) , (arrayElement (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName path)) : (singleExpression (literal '/language-resolver'))) , (propertyAssignment (propertyName (identifierName title)) : (singleExpression (literal 'Language Resolver'))) , (propertyAssignment (propertyName (identifierName icon)) : (singleExpression (literal 'translate'))) , (propertyAssignment (propertyName (identifierName (reservedWord (keyword class)))) : (singleExpression (literal ''))) , (propertyAssignment (propertyName (identifierName allowAnonymous)) : (singleExpression (identifierName (reservedWord false)))) }))) , (arrayElement (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName path)) : (singleExpression (literal '/commit-analysis'))) , (propertyAssignment (propertyName (identifierName title)) : (singleExpression (literal 'Commit History'))) , (propertyAssignment (propertyName (identifierName icon)) : (singleExpression (literal 'tune'))) , (propertyAssignment (propertyName (identifierName (reservedWord (keyword class)))) : (singleExpression (literal ''))) , (propertyAssignment (propertyName (identifierName allowAnonymous)) : (singleExpression (identifierName (reservedWord false)))) }))) , (arrayElement (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName path)) : (singleExpression (literal '/login'))) , (propertyAssignment (propertyName (identifierName title)) : (singleExpression (literal 'Log In'))) , (propertyAssignment (propertyName (identifierName icon)) : (singleExpression (literal 'lock'))) , (propertyAssignment (propertyName (identifierName (reservedWord (keyword class)))) : (singleExpression (literal ''))) , (propertyAssignment (propertyName (identifierName allowAnonymous)) : (singleExpression (identifierName (reservedWord true)))) })) ,)) ])))) ;))) (sourceElement export (statement (variableStatement (varModifier const) (variableDeclarationList (variableDeclaration (identifierOrKeyWord Components) = (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (identifierName _)) . (identifierName chain)) (arguments ( (argumentList (argument (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (singleExpression (singleExpression (singleExpression (identifierName _)) . (identifierName values)) (arguments ( (argumentList (argument (singleExpression (identifierName ROUTES)))) ))) as (asExpression (predefinedType any) [ ])))) ])))) ))) . (identifierName flatten)) (arguments ( ))) . (identifierName filter)) (arguments ( (argumentList (argument (singleExpression (arrowFunctionDeclaration (arrowFunctionParameters ( (formalParameterList (formalParameterArg (identifierOrKeyWord item))) )) => (arrowFunctionBody (singleExpression (singleExpression (singleExpression (identifierName item)) . (identifierName name)) && (singleExpression ( (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression (identifierName item)) . (identifierName name)) . (identifierName toLowerCase)) (arguments ( ))) . (identifierName endsWith)) (arguments ( (argumentList (argument (singleExpression (literal 'component')))) )))) )))))))) ))) . (identifierName value)) (arguments ( ))))) ;))) (sourceElement (statement (variableStatement (varModifier var) (variableDeclarationList (variableDeclaration (identifierOrKeyWord fileLanguages) = (singleExpression (singleExpression (singleExpression (identifierName _)) . (identifierName uniqBy)) (arguments ( (argumentList (argument (singleExpression (arrayLiteral [ (elementList (arrayElement ... (singleExpression (singleExpression this) . (identifierName fileLanguages))) , (arrayElement ... (singleExpression (identifierName Components)))) ]))) , (argument (singleExpression (arrowFunctionDeclaration (arrowFunctionParameters p) => (arrowFunctionBody (singleExpression (singleExpression (identifierName p)) . (identifierName fileId))))))) ))))) ;))) (sourceElement (statement (variableStatement (varModifier var) (variableDeclarationList (variableDeclaration (identifierOrKeyWord languageMap) = (singleExpression new (singleExpression (identifierName Map)) (arguments ( (argumentList (argument (singleExpression (singleExpression (singleExpression (identifierName fileLanguages)) . (identifierName map)) (arguments ( (argumentList (argument (singleExpression (arrowFunctionDeclaration (arrowFunctionParameters lang) => (arrowFunctionBody (singleExpression (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (singleExpression (identifierName lang)) . (identifierName id))) , (arrayElement (singleExpression (identifierName lang)))) ])) as (asExpression (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (identifierName (reservedWord (keyword string))))) , (arrayElement (singleExpression (identifierName ILanguage)))) ]))))))))) ))))) ))))) ;)))) <EOF>)
