(program (sourceElements (sourceElement (statement (importStatement import (importFromBlock (importDefault (aliasName (identifierName (identifier React))) ,) (moduleItems { (aliasName (identifierName (identifier Component))) }) (importFrom from 'react') (eos ;))))) (sourceElement (statement (importStatement import (importFromBlock (importNamespace (identifierName (identifier PropTypes))) (importFrom from 'prop-types') (eos ;))))) (sourceElement (statement (importStatement import (importFromBlock (moduleItems { (aliasName (identifierName (identifier findDOMNode))) }) (importFrom from 'react-dom') eos)))) (sourceElement (statement (importStatement import (importFromBlock (moduleItems { (aliasName (identifierName (identifier JivePopover))) , (aliasName (identifierName (identifier AutopositionOverlay))) }) (importFrom from 'mitui-util-bootstrap') (eos ;))))) (sourceElement (statement (classDeclaration class (identifier OptionField) (classTail extends (singleExpression (identifier Component)) { (classElement (identifier static) (assignable (identifier propTypes)) = (objectLiteral { (propertyAssignment (propertyName (identifierName (identifier id))) : (singleExpression (singleExpression (singleExpression (identifier PropTypes)) . (identifierName (identifier number))) . (identifierName (identifier isRequired)))) , (propertyAssignment (propertyName (identifierName (identifier onComplete))) : (singleExpression (singleExpression (singleExpression (identifier PropTypes)) . (identifierName (identifier func))) . (identifierName (identifier isRequired)))) , (propertyAssignment (propertyName (identifierName (identifier optionId))) : (singleExpression (singleExpression (identifier PropTypes)) . (identifierName (identifier number)))) , (propertyAssignment (propertyName (identifierName (identifier options))) : (singleExpression (singleExpression (singleExpression (singleExpression (identifier PropTypes)) . (identifierName (identifier arrayOf))) (arguments ( (argument (singleExpression (singleExpression (identifier PropTypes)) . (identifierName (identifier object)))) ))) . (identifierName (identifier isRequired)))) , (propertyAssignment (propertyName (identifierName (identifier title))) : (singleExpression (singleExpression (singleExpression (identifier PropTypes)) . (identifierName (identifier string))) . (identifierName (identifier isRequired)))) , (propertyAssignment (propertyName (identifierName (identifier value))) : (singleExpression (singleExpression (identifier PropTypes)) . (identifierName (identifier string)))) }) ;) (classElement (identifier static) (assignable (identifier defaultProps)) = (objectLiteral { (propertyAssignment (propertyName (identifierName (identifier optionId))) : (singleExpression - (singleExpression (literal (numericLiteral 1))))) , (propertyAssignment (propertyName (identifierName (identifier value))) : (singleExpression (literal ''))) }) ;) (classElement (propertyName (identifierName (identifier state))) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName (identifier showPopover))) : (singleExpression (literal false))) }))) (classElement (methodDefinition (propertyName (identifierName (identifier hide))) ( ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName (identifier setState))) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName (identifier showPopover))) : (singleExpression (literal false))) }))) )))) (eos ;)))))) })) (classElement (methodDefinition (propertyName (identifierName (identifier onSelectOption))) ( (formalParameterList (formalParameterArg (assignable (identifier option))) , (formalParameterArg (assignable (identifier e)))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (identifier e)) . (identifierName (identifier preventDefault))) (arguments ( )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression this) . (identifierName (identifier props))) . (identifierName (identifier onComplete))) (arguments ( (argument (singleExpression (identifier option))) )))) (eos ;)))))) })) (classElement (methodDefinition (propertyName (identifierName (identifier handlePopoverToggleClick))) ( (formalParameterList (formalParameterArg (assignable (identifier e)))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (identifier e)) . (identifierName (identifier preventDefault))) (arguments ( )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName (identifier setState))) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName (identifier showPopover))) : (singleExpression ! (singleExpression (singleExpression (singleExpression this) . (identifierName (identifier state))) . (identifierName (identifier showPopover))))) }))) )))) (eos ;)))))) })) (classElement (methodDefinition (propertyName (identifierName (identifier render))) ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression ( (expressionSequence (singleExpression (htmlElements (htmlElement < (htmlTagStartName (htmlTagName span)) > (htmlContent (htmlElement < (htmlTagStartName (htmlTagName a)) (htmlAttribute (htmlAttributeName (identifierOrKeyWord ref)) = (htmlAttributeValue "popoverToggle")) (htmlAttribute (htmlAttributeName (identifierOrKeyWord href)) = (htmlAttributeValue "#")) (htmlAttribute (htmlAttributeName (identifierOrKeyWord onClick)) = (htmlAttributeValue (objectExpressionSequence { (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression this) . (identifierName (identifier handlePopoverToggleClick))) . (identifierName (identifier bind))) (arguments ( (argument (singleExpression this)) )))) }))) > (htmlContent (objectExpressionSequence { (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression this) . (identifierName (identifier props))) . (identifierName (identifier value))) || (singleExpression (singleExpression (singleExpression this) . (identifierName (identifier props))) . (identifierName (identifier title))))) })) < / (htmlTagClosingName (htmlTagName a)) >) (htmlElement < (htmlTagStartName (htmlTagName AutopositionOverlay)) (htmlAttribute (htmlAttributeName (identifierOrKeyWord show)) = (htmlAttributeValue (objectExpressionSequence { (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName (identifier state))) . (identifierName (identifier showPopover)))) }))) (htmlAttribute (htmlAttributeName (identifierOrKeyWord target)) = (htmlAttributeValue (objectExpressionSequence { (expressionSequence (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (singleExpression (identifier findDOMNode)) (arguments ( (argument (singleExpression (singleExpression (singleExpression this) . (identifierName (identifier refs))) . (identifierName (identifier popoverToggle)))) ))))))) }))) (htmlAttribute (htmlAttributeName (identifierOrKeyWord placement)) = (htmlAttributeValue "bottom")) (htmlAttribute (htmlAttributeName (identifierOrKeyWord animation)) = (htmlAttributeValue (objectExpressionSequence { (expressionSequence (singleExpression (literal false))) }))) (htmlAttribute (htmlAttributeName (identifierOrKeyWord onHide)) = (htmlAttributeValue (objectExpressionSequence { (expressionSequence (singleExpression (anoymousFunction (arrowFunctionParameters ( )) => (arrowFunctionBody (singleExpression (singleExpression (singleExpression this) . (identifierName (identifier setState))) (arguments ( (argument (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName (identifier showPopover))) : (singleExpression (literal false))) }))) ))))))) }))) (htmlAttribute (htmlAttributeName (identifierOrKeyWord rootClose)) = (htmlAttributeValue (objectExpressionSequence { (expressionSequence (singleExpression (literal true))) }))) > (htmlContent (htmlElement < (htmlTagStartName (htmlTagName JivePopover)) (htmlAttribute (htmlAttributeName (identifierOrKeyWord id)) = (htmlAttributeValue (objectExpressionSequence { (expressionSequence (singleExpression (literal (templateStringLiteral ` (templateStringAtom o) (templateStringAtom p) (templateStringAtom t) (templateStringAtom i) (templateStringAtom o) (templateStringAtom n) (templateStringAtom -) (templateStringAtom f) (templateStringAtom i) (templateStringAtom e) (templateStringAtom l) (templateStringAtom d) (templateStringAtom -) (templateStringAtom ${ (singleExpression (singleExpression (singleExpression this) . (identifierName (identifier props))) . (identifierName (identifier id))) }) `)))) }))) (htmlAttribute (htmlAttributeName (identifierOrKeyWord className)) = (htmlAttributeValue "j2-pages-mitui-profile-header-popover-availability")) > (htmlContent (htmlElement < (htmlTagStartName (htmlTagName h4)) > (htmlContent (objectExpressionSequence { (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName (identifier props))) . (identifierName (identifier title)))) })) < / (htmlTagClosingName (htmlTagName h4)) >) (htmlElement < (htmlTagStartName (htmlTagName ul)) (htmlAttribute (htmlAttributeName (identifierOrKeyWord className)) = (htmlAttributeValue "j2-list-std")) > (htmlContent (objectExpressionSequence { (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (singleExpression this) . (identifierName (identifier props))) . (identifierName (identifier options))) . (identifierName (identifier map))) (arguments ( (argument (singleExpression (anoymousFunction (arrowFunctionParameters ( (formalParameterList (formalParameterArg (assignable (identifier option))) , (formalParameterArg (assignable (identifier i)))) )) => (arrowFunctionBody (singleExpression ( (expressionSequence (singleExpression (htmlElements (htmlElement < (htmlTagStartName (htmlTagName li)) (htmlAttribute (htmlAttributeName (identifierOrKeyWord key)) = (htmlAttributeValue (objectExpressionSequence { (expressionSequence (singleExpression (literal (templateStringLiteral ` (templateStringAtom o) (templateStringAtom p) (templateStringAtom t) (templateStringAtom i) (templateStringAtom o) (templateStringAtom n) (templateStringAtom s) (templateStringAtom -) (templateStringAtom f) (templateStringAtom i) (templateStringAtom e) (templateStringAtom l) (templateStringAtom d) (templateStringAtom -) (templateStringAtom i) (templateStringAtom t) (templateStringAtom e) (templateStringAtom m) (templateStringAtom -) (templateStringAtom ${ (singleExpression (identifier i)) }) `)))) }))) > (htmlContent (htmlElement < (htmlTagStartName (htmlTagName a)) (htmlAttribute (htmlAttributeName (identifierOrKeyWord href)) = (htmlAttributeValue "#")) (htmlAttribute (htmlAttributeName (identifierOrKeyWord onClick)) = (htmlAttributeValue (objectExpressionSequence { (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression this) . (identifierName (identifier onSelectOption))) . (identifierName (identifier bind))) (arguments ( (argument (singleExpression this)) , (argument (singleExpression (identifier option))) )))) }))) > (htmlContent (objectExpressionSequence { (expressionSequence (singleExpression (singleExpression (identifier option)) . (identifierName (identifier value)))) })) < / (htmlTagClosingName (htmlTagName a)) >)) < / (htmlTagClosingName (htmlTagName li)) >)))) )))))) )))) })) < / (htmlTagClosingName (htmlTagName ul)) >)) < / (htmlTagClosingName (htmlTagName JivePopover)) >)) < / (htmlTagClosingName (htmlTagName AutopositionOverlay)) >)) < / (htmlTagClosingName (htmlTagName span)) >)))) ))) (eos ;)))))) })) })))) (sourceElement (statement (exportStatement export default (singleExpression (identifier OptionField)) (eos ;))))) <EOF>)
